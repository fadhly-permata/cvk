// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Repository.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Repository.Contexts
{
    public partial class CvkmpContext : DbContext
    {
        private readonly string _conString;

        internal CvkmpContext()
        {
        }

        public CvkmpContext(DbContextOptions<CvkmpContext> options)
            : base(options)
        {
        }

        public CvkmpContext(string constring)
        {
            _conString = constring;
        }

        public virtual DbSet<CheckList> CheckList { get; set; }
        public virtual DbSet<Task> Task { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                //optionsBuilder.UseSqlServer("Data Source=DESKTOP-6UH5HT3\\LOCALMSSQL2017;Initial Catalog=CvKMP;Integrated Security=True");
                optionsBuilder.UseSqlServer(_conString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<CheckList>(entity =>
            {
                entity.HasKey(e => new { e.CheckId, e.TaskId });

                entity.Property(e => e.CheckId).HasDefaultValueSql("(newid())");

                entity.Property(e => e.IsCompleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ToDo).IsUnicode(false);

                entity.HasOne(d => d.Task)
                    .WithMany(p => p.CheckList)
                    .HasForeignKey(d => d.TaskId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CheckList_Task");
            });

            modelBuilder.Entity<Task>(entity =>
            {
                entity.Property(e => e.TaskId).HasDefaultValueSql("(newid())");

                entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.IsDeleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Title).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}